-- DCGM - CYGI License.
-- Copyright (c) 2025 Victor Fuchadzhy.
-- Beast Vision Goggles: Shader render controller.

local param_flip_down = -1
local param_vignette = -1
local param_generation = -1
local param_mode = -1
local param_num_tubes = -1
local param_gain = -1
local param_glitch_power = -1

local is_enabled = false
local is_dirty = false

function set_flip_down(value)
    if (param_flip_down ~= value) then
        param_flip_down = value
        is_dirty = true
    end
end

function set_vignette(value)
    if (param_vignette ~= value) then
        param_vignette = value
        is_dirty = true
    end
end

function set_enabled(value)
    if (is_enabled ~= value) then
        is_enabled = value
        is_dirty = true
    end
end

function set_generation(value)
    if (param_generation ~= value) then
        param_generation = value
        is_dirty = true
    end
end

function set_mode(value)
    if (param_mode ~= value) then
        param_mode = value
        is_dirty = true
    end
end

function set_num_tubes(value)
    if (param_num_tubes ~= value) then
        param_num_tubes = value
        is_dirty = true
    end
end

function set_gain(value)
    if (param_gain ~= value) then
        param_gain = value
        is_dirty = true
    end
end

function set_glitch_power(value)
    if (param_glitch_power ~= value) then
        param_glitch_power = value
        is_dirty = true
    end
end

function notify_config_changed()
    -- We dont cache config settings, so just mark shader dirty.
    is_dirty = true
end
    
function update()
    if (not is_dirty) then return end
    
    is_dirty = false
    
    if (is_enabled) then
        get_console():execute("r__nightvision " .. param_generation)
        get_console():execute("shader_param_8 " .. pack_data_0())
        get_console():execute("shader_param_7 " .. pack_data_1())
    
    else
        get_console():execute("r__nightvision 0")
        get_console():execute("shader_param_8 (0,0,0,0)")
    end
end

function pack_data_0()
    local x_1 = tostring(param_generation)                           -- Generation (1,2,3) - outputs 1.x to 3.x
    local x_2 = tostring(param_num_tubes * 10)                       -- Num Tubes (1,2,4,1.1,1.2) outputs x.10, x.20, x.40, x.11, or x.12
    local w_2 = tostring(param_mode)                                 -- Mode (0,1) - outputs w.0 or w.1 depending on mode.
    local y_1 = tostring(math.floor(param_gain * 10))                -- Gain Adjust (0.1 to 3) -- outputs 1.y to 30.y in 1. increment.
    local y_2 = tostring(math.floor(bvg_config.washout_thresh * 10)) -- Washout Thresh (0.0 - 0.9) - outputs y.0 to y.9 in .1 increment.
    local z_1 = tostring(math.floor(param_vignette * 100))           -- Vignette Amount (0.0 to 1.0) outputs 0.z to 100.z in 1. increment.
    local z_2 = tostring(math.floor(param_glitch_power * 10))        -- Glitch Power (0.0 - 0.9) - outputs z.0 to z.9 in .1 increment.
    local w_1 = tostring((math.floor(bvg_config.gain_offset * 10)))  -- Gain Offset (0.5 to 3.0) - outputs 5.w to 30.w in 1. increment.

    return "(" ..
        x_1 .. "." .. x_2 .. "," .. y_1 .. "." .. y_2 .. "," .. z_1 .. "." .. z_2 .. "," .. w_1 .. "." .. w_2 .. ")"
end

function pack_data_1()
    local x_1 = tostring(math.floor(param_flip_down)) -- Flip down amount - outputs 1.x to 100.x
    local x_2 = tostring(0)
    local y_1 = tostring(0)
    local y_2 = tostring(math.floor(0.5 * 10)) -- Radius for NVG effect - outputs 0.0 to 0.9
    local z_1 = tostring(0)
    local z_2 = tostring(0)
    local w_1 = tostring(0)
    local w_2 = tostring(0)

    return "(" ..
        x_1 .. "." .. x_2 .. "," .. y_1 .. "." .. y_2 .. "," .. z_1 .. "." .. z_2 .. "," .. w_1 .. "." .. w_2 .. ")"
end